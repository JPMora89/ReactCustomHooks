{"ast":null,"code":"var _jsxFileName = \"/home/jpmora/ReactCardsHooksExercise/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport useAxios from \"./hooks/useAxios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s();\n  // Old Code using useState\n  // const [cards, setCards] = useState([]);\n  // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n\n  // Using custom hook\n\n  const [cards, addCard, clearData] = useAxios(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCard,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearData,\n        children: \"Clear all the cards!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.cards[0].image\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"+cnmJQLXCen457LF/Kv+9IIp/yY=\", false, function () {\n  return [useAxios];\n});\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","uuid","axios","useAxios","PlayingCard","jsxDEV","_jsxDEV","CardTable","_s","cards","addCard","clearData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cardData","front","image","id","_c","defaultProps","$RefreshReg$"],"sources":["/home/jpmora/ReactCardsHooksExercise/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport useAxios from \"./hooks/useAxios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n\n  // Old Code using useState\n  // const [cards, setCards] = useState([]);\n  // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n\n  // Using custom hook\n\n  const [cards, addCard, clearData] = useAxios(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n\n\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={addCard}>Add a playing card!</button>\n        <button onClick={clearData}>Clear all the cards!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(cardData => (\n          <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;;AAE9B;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,+CAA+C,CAAC;EAG7F,oBACEG,OAAA;IAAKM,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BP,OAAA;MAAAO,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BX,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAQY,OAAO,EAAER,OAAQ;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDX,OAAA;QAAQY,OAAO,EAAEP,SAAU;QAAAE,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNX,OAAA;MAAKM,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCJ,KAAK,CAACU,GAAG,CAACC,QAAQ,iBACjBd,OAAA,CAACF,WAAW;QAAmBiB,KAAK,EAAED,QAAQ,CAACX,KAAK,CAAC,CAAC,CAAC,CAACa;MAAM,GAA5CF,QAAQ,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CA9BQD,SAAS;EAAA,QAaoBJ,QAAQ;AAAA;AAAAqB,EAAA,GAbrCjB,SAAS;AAgClBA,SAAS,CAACkB,YAAY,GAAG,CAAC,CAAC;AAE3B,eAAelB,SAAS;AAAC,IAAAiB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module"}